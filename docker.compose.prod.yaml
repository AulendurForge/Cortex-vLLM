name: cortex

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: cortex
      POSTGRES_PASSWORD: cortex
      POSTGRES_DB: cortex
    healthcheck: { test: ["CMD-SHELL", "pg_isready -U cortex"], interval: 5s, timeout: 5s, retries: 10 }
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    volumes:
      - redis_data:/data

  gateway:
    image: your-registry/cortex-gateway:latest
    env_file:
      - ./backend/.env.prod
    environment:
      VLLM_GEN_URLS: ""
      VLLM_EMB_URLS: ""
      INTERNAL_VLLM_API_KEY: ${INTERNAL_VLLM_API_KEY}
      GATEWAY_DEV_ALLOW_ALL_KEYS: "false"
      CORTEX_MODELS_DIR: ${CORTEX_MODELS_DIR:-/var/cortex/models}
      HF_CACHE_DIR: ${HF_CACHE_DIR:-/var/cortex/hf-cache}
      VLLM_IMAGE: ${VLLM_IMAGE:-vllm/vllm-openai:latest}
    ports: ["${GATEWAY_PORT:-80}:8080"]
    depends_on: [vllm-gen, vllm-emb, redis, postgres]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CORTEX_MODELS_DIR:-/var/cortex/models}:/var/cortex/models:ro
      - ${HF_CACHE_DIR:-/var/cortex/hf-cache}:/var/cortex/hf-cache

volumes:
  postgres_data:
  redis_data: